#include <cstdio>

char* getString(int* len) {
    *len = 0;                               // Начальная длина строки равна 0
    int capacity = 1;                        // Емкость строки, начиная с места для одного символа
    char* s = new char[capacity];            // Выделение памяти для строки

    int c;                                   // Должен быть типа int для обработки EOF и перевода строки
    while ((c = getchar()) == '\n');         // Пропускаем начальные переводы строки

    if (c != EOF) {                          // Если сразу конец файла, ничего не делаем
        ungetc(c, stdin);                    // Возвращаем прочитанный символ в поток для корректного чтения
    }

    while ((c = getchar()) != '\n' && c != EOF) { // Чтение до конца строки или файла
        if (*len + 1 >= capacity) {          // +1 для нуль-терминатора
            capacity = (*len + 1) * 2;       // Увеличиваем емкость, учитываем нуль-терминатор
            char* temp = new char[capacity]; // Выделение новой памяти

            for (int i = 0; i < *len; ++i) {
                temp[i] = s[i];              // Копирование старой строки в новый буфер
            }

            delete[] s;                      // Очистка старого буфера
            s = temp;                        // Назначение нового адреса строки
        }

        s[(*len)++] = (char)c;               // Добавление нового символа и увеличение длины
    }

    // Учитываем возможность, что сразу после чтения последнего символа может потребоваться расширение
    if (*len + 1 >= capacity) {              // +1 для нуль-терминатора
        capacity = *len + 1;                 // Теперь достаточно места только для нуль-терминатора
        char* temp = new char[capacity];
        for (int i = 0; i < *len; ++i) {
            temp[i] = s[i];
        }
        delete[] s;
        s = temp;
    }

    s[*len] = '\0';                          // Завершение строки нуль-терминатором
    return s;                                // Возврат указателя на строку
}
